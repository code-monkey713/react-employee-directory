{"version":3,"sources":["components/Header.js","components/TableEmployee.js","App.js","index.js"],"names":["Header","Row","className","Col","TableEmployee","uponRefresh","a","axios","get","then","res","employeeData","i","data","results","length","singleEmployee","image","src","picture","thumbnail","alt","name","first","last","phone","email","dob","formatDate","date","push","setState","employees","catch","error","console","log","state","columns","label","field","sort","width","dateString","Date","getMonth","getDate","getFullYear","this","rows","sorting","Component","App","Container","fluid","ReactDOM","render","document","getElementById"],"mappings":"yNAiBeA,EAfA,WACb,OACE,cAACC,EAAA,EAAD,CAAKC,UAAU,6CAAf,SACE,eAACC,EAAA,EAAD,WACE,qBAAKD,UAAU,+BAAf,SACE,4DAEF,qBAAKA,UAAU,+BAAf,qG,kFCgFOE,E,kDApFb,aAAe,IAAD,8BACZ,gBA2CFC,YA5Cc,sBA4CA,sBAAAC,EAAA,qHAGNC,IACHC,IAJS,iDAKTC,MAAK,SAACC,GAEL,IADA,IAAIC,EAAe,GACVC,EAAI,EAAGA,EAAIF,EAAIG,KAAKC,QAAQC,OAAQH,IAAK,CAChD,IAAMI,EAAiB,CACrBC,MAAO,CAAC,qBAAKC,IAAKR,EAAIG,KAAKC,QAAQF,GAAGO,QAAQC,UAAWC,IAAI,MAC7DC,KAAK,GAAD,OAAKZ,EAAIG,KAAKC,QAAQF,GAAGU,KAAKC,MAA9B,YAAuCb,EAAIG,KAAKC,QAAQF,GAAGU,KAAKE,MACpEC,MAAOf,EAAIG,KAAKC,QAAQF,GAAGa,MAC3BC,MAAOhB,EAAIG,KAAKC,QAAQF,GAAGc,MAC3BC,IAAK,EAAKC,WAAWlB,EAAIG,KAAKC,QAAQF,GAAGe,IAAIE,OAE/ClB,EAAamB,KAAKd,GAEpB,EAAKe,SAAS,CACZC,UAAWrB,OAGdsB,OAAM,SAAUC,GACfC,QAAQC,IAAIF,MAtBJ,2CA1CZ,EAAKG,MAAQ,CACXL,UAAW,GACXM,QAAS,CACP,CACEC,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,OACPC,MAAO,OACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,MACPC,MAAO,MACPC,KAAM,MACNC,MAAO,OAjCD,E,8CAuCd,SAAWC,GACT,IAAMd,EAAO,IAAIe,KAAKD,GACtB,MAAM,GAAN,OAAUd,EAAKgB,WAAa,EAA5B,YAAiChB,EAAKiB,UAAtC,YAAmDjB,EAAKkB,iB,+BA6B1D,WACEC,KAAK3C,gB,oBAGP,WACE,OACE,cAAC,IAAD,CACEQ,KAAM,CAAEyB,QAASU,KAAKX,MAAMC,QAASW,KAAMD,KAAKX,MAAML,WACtDkB,QAAQ,a,GA/EYC,aCcbC,EAbH,WACV,OACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAAC,EAAD,IACA,cAACrD,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,UACE,cAAC,EAAD,YCNVoD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.1e5923df.chunk.js","sourcesContent":["import { Col, Row } from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Row className='center-align flex-column background header'>\r\n      <Col>\r\n        <div className='center-align text-light pt-2'>\r\n          <h2>React Employee Directory</h2>\r\n        </div>\r\n        <div className='center-align text-light pb-2'>\r\n          Click on the column headers to sort or use the search box to narrow your results.\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Component } from 'react';\nimport axios from 'axios';\nimport { MDBDataTable } from 'mdbreact';\n\nclass TableEmployee extends Component {\n  constructor() {\n    super();\n    this.state = {\n      employees: [],\n      columns: [\n        {\n          label: 'Image',\n          field: 'image',\n          sort: 'asc',\n          width: 150,\n        },\n        {\n          label: 'Name',\n          field: 'name',\n          sort: 'asc',\n          width: 200,\n        },\n        {\n          label: 'Phone',\n          field: 'phone',\n          sort: 'asc',\n          width: 200,\n        },\n        {\n          label: 'Email',\n          field: 'email',\n          sort: 'asc',\n          width: 200,\n        },\n        {\n          label: 'DOB',\n          field: 'dob',\n          sort: 'asc',\n          width: 200,\n        },\n      ],\n    };\n  }\n\n  formatDate(dateString) {\n    const date = new Date(dateString);\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n  }\n\n  uponRefresh = async () => {\n    const url = `https://randomuser.me/api/?results=200&nat=us`;\n\n    await axios\n      .get(url)\n      .then((res) => {\n        let employeeData = [];\n        for (let i = 0; i < res.data.results.length; i++) {\n          const singleEmployee = {\n            image: [<img src={res.data.results[i].picture.thumbnail} alt=\"\" />],\n            name: `${res.data.results[i].name.first} ${res.data.results[i].name.last}`,\n            phone: res.data.results[i].phone,\n            email: res.data.results[i].email,\n            dob: this.formatDate(res.data.results[i].dob.date),\n          };\n          employeeData.push(singleEmployee);\n        }\n        this.setState({\n          employees: employeeData,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  componentDidMount() {\n    this.uponRefresh();\n  }\n\n  render() {\n    return (\n      <MDBDataTable\n        data={{ columns: this.state.columns, rows: this.state.employees }}\n        sorting=\"true\"\n      />\n    );\n  }\n}\n\nexport default TableEmployee;\n","import './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Header from './components/Header';\nimport TableEmployee from './components/TableEmployee';\n\nconst App = () => {\n  return (\n    <Container fluid>\n      <Header />\n      <Row>\n        <Col>\n          <TableEmployee />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}